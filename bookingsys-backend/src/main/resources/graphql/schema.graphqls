# query definitions
type Query{
    # companies
    getCompanies : [Company!]
    getCompanyById(id : ID!) : Company!

    # clients
    getAllClients : [Client!]
    getClientById(id : ID!) : Client!

    #routes
    getAllRoutes : [Route!]
    getRouteById(id : ID!) : Route!
    getCountyRoutes(countyName:String!):[Booking]
    getSubCountyRoutes(subCountyName:String!):[Booking]
    getRegionRoutes(countyName:String!, subCountyName:String!):[Booking]

    #schedule
    getAllSchedules : [Schedule!]
    getScheduleById(id : ID!) : Schedule!

    #vehicles
    getVehicleById(id : ID!) : Vehicle!
    getAllVehicles : [Vehicle!]
    getVehiclesByRoute(routeId : String!) : [Vehicle]

    #bookings
    getBookingById(id : ID!) : Booking!
    getAllBookings : [Booking!]
    getClientBookings(clientId : ID!) : [Booking!]
    getVehicleBookings(vehicleId : ID!) : [Booking!]


    #locations
    getCounties: [County!]
    getSubCounties: [SubCounty!]
    getSubCountiesByCountyNumber(countyNumber : Int!): [SubCounty!]
    getSubCountiesByCountyName(countyName : String!): [SubCounty!]

}

# mutations
type Mutation {

    # client
    addClient(dto : ClientDto!) : Client

    #company
    createCompany(dto : CompanyDto!): Company!
    deleteCompany(id : String) : Boolean

    #schedules
    saveSchedule(dto : ScheduleDto!) : Schedule
    deleteSchedule(id : ID) : Boolean

    #routes
    saveRoute(dto : RouteDto!) : Route
    deleteRoute(id : ID) : Boolean

    #vehicles
    saveVehicle(dto: VehicleDto!) : Vehicle
    updateVehicle(id :ID, dto : VehicleDto) : Vehicle
    deleteVehicle(id: ID) : Boolean

    #bookings
    saveBooking(dto : BookingDto!) : Booking
    cancelBooking(bookingId : String) : Booking
    deleteBooking(bookingId : String) : Boolean

}

schema {
    query: Query,
    mutation: Mutation
}
